ѕроект HomeApi 
Ч это непосредственно сборка нашего приложени€. 
—трого говор€, это и есть API, которое слушает порт и обслуживает запросы. 
«десь будут контроллеры, конфигураци€ дл€ запуска, класс Startup.cs и всЄ.

ѕроект HomeApi.Contracts 
Ч €вл€етс€ самосто€тельной независимой библиотекой классов. 
ќна содержит модели запросов и ответов, которые будут использоватьс€ в HomeApi. 
“акже здесь находитс€ всЄ, что св€зано с валидацией этих запросов и ответов. 
ѕри необходимости мы можем превратить эту библиотеку в NuGet-пакет, разместить на локальном NuGet-сервере компании и использовать в других проектах!

ѕроект HomeApi.Data 
Ч здесь находитс€ всЄ, что св€зано с доступом к данным Ч модели таблиц, репозитории, контекст базы данных. 
Ётот проект тоже €вл€етс€ отдельной библиотекой классов, подключенной к HomeApi.


_______

 онтроллер Ч это про запросы, репозиторий Ч это про данные.


”брать всю логику взаимодействи€ с данными из контроллера в модель нам позвол€ет ещЄ один вспомогательный объект: query или запрос.

Query
 ласс query у нас представл€ет простую модельку данных, куда можно поместить параметры дл€ запроса в репозиторий, чтобы не передавать их по одному.
ќн представл€ет услови€, которые следует выполнить при взаимодействии с данными через репозиторий.