Архитектура MVC

1 Модель (слой доступа к данным) — описывает все данные приложения и логику, которая с ними связана. 
Моделями могут быть как внутренние бизнес-сущности приложения, так и объекты, которые хранятся непосредственно в базе данных. 
Модель может представлять данные (например, если наше приложение работает со списком студентов в базе, модель класса Student, возможно, будет представлять собой класс с набором свойств студента: возраст, пол, имя, фамилия и так далее), 
также модель может содержать логику, которая непосредственно с этими данными связана.

При этом то, что напрямую к данным не относится (обработка запроса, логика взаимодействия с пользователем или отображения интерфейса), 
в модели содержаться не должно.

2 Представление (слой визуализации) — отвечает непосредственно за взаимодействие с пользователем или пользовательский интерфейс. 
Представлением может являться HTML-страница. 
Представление также может содержать логику для отображения данных.

Но логика управления данными или обработки запроса в представлении находиться не должна.

3 Контроллер (связующий слой) — центральный компонент MVC-приложения, благодаря ему достигается связь первых двух. 
Именно здесь стоит размещать логику обработки пользовательских запросов. 
От пользователя контроллер получает введённые данные, обрабатывает их и далее взаимодействует с моделями, изменяя их тем или иным образом. 
Также контроллер отправляет пользователю определённый ответ.


_______________________________________________________________________________________________________________________________________________
Паттерн MVC можно реализовать двумя способами. 
Так как ASP.NET Core — модульный фреймворк, мы можем:
- подключить к нашему минимальному проекту функционал MVC постепенно. 
- либо можем создать новый проект MVC, используя один из готовых шаблонов проекта


Сразу добавляются папки:

wwwroot — папка для хранения статических файлов. Про неё мы уже говорили раньше, но тут немного по другому: 
в ней будут лежать только изображения, скрипты JS и стили CSS. 
Обычные HTML-страницы в MVC приложении являются представлениями и лежат, как правило, в папке Views.

Controllers, Models, Views — все, соответственно, для хранения одноимённых элементов и ничего больше


//  Процесс запроса пользователя к приложению у нас будет выглядеть так:
//  Запрос — Контроллер — Репозиторий — Контекст(с моделями) — База данных


Частичные представления
Они позволяют встроить в основную страницу другие, либо отображать на основной странице разные фрагменты в зависимости от необходимости.